[{"C:\\Users\\hyuk\\Desktop\\WorkSpace\\React\\diaryapp\\src\\index.js":"1","C:\\Users\\hyuk\\Desktop\\WorkSpace\\React\\diaryapp\\src\\App.js":"2","C:\\Users\\hyuk\\Desktop\\WorkSpace\\React\\diaryapp\\src\\pages\\Home.js":"3","C:\\Users\\hyuk\\Desktop\\WorkSpace\\React\\diaryapp\\src\\pages\\New.js":"4","C:\\Users\\hyuk\\Desktop\\WorkSpace\\React\\diaryapp\\src\\pages\\Diary.js":"5","C:\\Users\\hyuk\\Desktop\\WorkSpace\\React\\diaryapp\\src\\pages\\Edit.js":"6","C:\\Users\\hyuk\\Desktop\\WorkSpace\\React\\diaryapp\\src\\components\\MyButton.js":"7","C:\\Users\\hyuk\\Desktop\\WorkSpace\\React\\diaryapp\\src\\components\\MyHeader.js":"8","C:\\Users\\hyuk\\Desktop\\WorkSpace\\React\\diaryapp\\src\\components\\DiaryList.js":"9","C:\\Users\\hyuk\\Desktop\\WorkSpace\\React\\diaryapp\\src\\components\\DiaryItem.js":"10","C:\\Users\\hyuk\\Desktop\\WorkSpace\\React\\diaryapp\\src\\components\\DiaryEditor.js":"11","C:\\Users\\hyuk\\Desktop\\WorkSpace\\React\\diaryapp\\src\\components\\EmotionItem.js":"12","C:\\Users\\hyuk\\Desktop\\WorkSpace\\React\\diaryapp\\src\\util\\date.js":"13","C:\\Users\\hyuk\\Desktop\\WorkSpace\\React\\diaryapp\\src\\util\\emotion.js":"14"},{"size":254,"mtime":1672019176080,"results":"15","hashOfConfig":"16"},{"size":2199,"mtime":1672057421393,"results":"17","hashOfConfig":"16"},{"size":2000,"mtime":1672055678937,"results":"18","hashOfConfig":"16"},{"size":183,"mtime":1672044260918,"results":"19","hashOfConfig":"16"},{"size":2584,"mtime":1672054002668,"results":"20","hashOfConfig":"16"},{"size":1019,"mtime":1672052575859,"results":"21","hashOfConfig":"16"},{"size":466,"mtime":1672031307213,"results":"22","hashOfConfig":"16"},{"size":426,"mtime":1672031318255,"results":"23","hashOfConfig":"16"},{"size":2938,"mtime":1672038398640,"results":"24","hashOfConfig":"16"},{"size":1211,"mtime":1672039424983,"results":"25","hashOfConfig":"16"},{"size":4475,"mtime":1672055424564,"results":"26","hashOfConfig":"16"},{"size":491,"mtime":1672045350077,"results":"27","hashOfConfig":"16"},{"size":306,"mtime":1672052857127,"results":"28","hashOfConfig":"16"},{"size":781,"mtime":1672053239445,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19x5mj9",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"39"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"39"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"39"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"C:\\Users\\hyuk\\Desktop\\WorkSpace\\React\\diaryapp\\src\\index.js",[],[],"C:\\Users\\hyuk\\Desktop\\WorkSpace\\React\\diaryapp\\src\\App.js",[],[],"C:\\Users\\hyuk\\Desktop\\WorkSpace\\React\\diaryapp\\src\\pages\\Home.js",[],[],[],"C:\\Users\\hyuk\\Desktop\\WorkSpace\\React\\diaryapp\\src\\pages\\New.js",[],[],"C:\\Users\\hyuk\\Desktop\\WorkSpace\\React\\diaryapp\\src\\pages\\Diary.js",["78","79"],[],"import { useContext, useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { DiaryStateContext } from \"../App\";\r\nimport MyButton from \"../components/MyButton\";\r\nimport MyHeader from \"../components/MyHeader\";\r\nimport { getStringDate } from \"../util/date\";\r\nimport { emotionList } from \"../util/emotion\";\r\n\r\nconst Diary = () => {\r\n    const {id} = useParams();\r\n    const navigate = useNavigate();\r\n    const diaryList = useContext(DiaryStateContext);\r\n    const [data, setData] = useState();\r\n\r\n    useEffect(() => {\r\n        if (diaryList.length >= 1){\r\n            const targetDiary = diaryList.find((it) => parseInt(it.id)===parseInt(id));\r\n            if (targetDiary) {\r\n                setData(targetDiary);\r\n            } else {\r\n                alert('없는 일기입니다')\r\n                navigate('/', {replace:true})\r\n            }\r\n        }\r\n    })\r\n\r\n    if (!data) {\r\n        return <div>로딩 중입니다...</div>\r\n    } else {\r\n        const curEmotionData = emotionList.find((it) => parseInt(it.emotion_id) === parseInt(data.emotion))\r\n\r\n        return (\r\n            <div className=\"DiaryPage\">\r\n                <MyHeader \r\n                    headText={`${getStringDate(new Date(data.date))} 기록`}\r\n                    leftChild={<MyButton \r\n                                    text={'< 뒤로가기'}\r\n                                    onClick={() => navigate(-1)}\r\n                                />}\r\n                    rightChild={<MyButton \r\n                                    text={'수정하기'}\r\n                                    onClick={() => navigate(`/edit/${id}`)}\r\n                    />}\r\n                />\r\n                <article>\r\n                    <section>\r\n                        <h4>오늘의 감정</h4>\r\n                        <div className={[\"diary_img_wrapper\", `diary_img_wrapper_${data.emotion}`].join(' ')}>\r\n                            <img src={curEmotionData.emotion_img}/>\r\n                            <div className=\"emotion_descript\">\r\n                                {curEmotionData.emotion_descript}\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                    <section>\r\n                        <h4>오늘의 일기</h4>\r\n                        <div className=\"diary_content_wrapper\">\r\n                            <p>{data.content}</p>\r\n                        </div>\r\n                    </section>\r\n                </article>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Diary;","C:\\Users\\hyuk\\Desktop\\WorkSpace\\React\\diaryapp\\src\\pages\\Edit.js",["80"],[],"import { useContext, useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { DiaryStateContext } from \"../App\";\r\nimport DiaryEditor from \"../components/DiaryEditor\";\r\n\r\nconst Edit = () => {\r\n    const navigate = useNavigate();\r\n    const {id} = useParams();\r\n    const diaryList = useContext(DiaryStateContext);\r\n    const [originData, setOriginData] = useState();\r\n\r\n    useEffect(()=> {\r\n        if(diaryList.length >= 1){\r\n            const targetDiary = diaryList.find((it)=>parseInt(it.id)===parseInt(id));\r\n            if (targetDiary){\r\n                setOriginData(targetDiary);\r\n            } else{\r\n                alert('없는 일기입니다')\r\n                navigate('/', {replace:true})\r\n            }\r\n        }\r\n    }, [id, diaryList])\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                originData && \r\n                <DiaryEditor isEdit={true} originData={originData} />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Edit;","C:\\Users\\hyuk\\Desktop\\WorkSpace\\React\\diaryapp\\src\\components\\MyButton.js",["81"],[],"const MyButton = ({text, type, onClick}) => {\r\n    const btnType = ['positive', 'negative'].includes(type)? type:'default';\r\n    // 배열안에 값이 없다면 type을 default로 바꿔주는 코드\r\n    return (\r\n        <button \r\n            className={[\"MyButton\", `MyButton_${type}`].join(' ')} \r\n            onClick={onClick}>\r\n            {text}\r\n        </button>\r\n    )\r\n};\r\n\r\nMyButton.defaultProps = {\r\n    type: \"default\",\r\n};\r\n\r\nexport default MyButton;","C:\\Users\\hyuk\\Desktop\\WorkSpace\\React\\diaryapp\\src\\components\\MyHeader.js",[],[],"C:\\Users\\hyuk\\Desktop\\WorkSpace\\React\\diaryapp\\src\\components\\DiaryList.js",[],[],"C:\\Users\\hyuk\\Desktop\\WorkSpace\\React\\diaryapp\\src\\components\\DiaryItem.js",["82"],[],"import { useNavigate } from \"react-router-dom\";\r\nimport MyButton from \"./MyButton\";\r\n\r\nconst DiaryItem = ({id, emotion, content, date}) => {\r\n    const navigate = useNavigate();\r\n\r\n    const goDetail = () => {\r\n        navigate(`/diary/${id}`)\r\n    }\r\n\r\n    const goEdit = () => {\r\n        navigate(`/edit/${id}`)\r\n    }\r\n\r\n    return (\r\n        <div className=\"DiaryItem\">\r\n            <div \r\n                className={[\"emotion_img_wrapper\", `emotion_img_wrapper_${emotion}`]\r\n                            .join(' ')}\r\n                onClick={goDetail}\r\n            >\r\n                <img src={process.env.PUBLIC_URL + `assets/emotion${emotion}.png`} />\r\n            </div>\r\n            <div className=\"info_wrapper\" onClick={goDetail}>\r\n                <div className=\"diary_date\">\r\n                    {new Date(parseInt(date)).toLocaleDateString()}\r\n                </div>\r\n                <div className=\"diary_content_preview\">\r\n                    {content.slice(0, 25)}\r\n                </div>\r\n            </div>\r\n            <div className=\"btn_wrapper\">\r\n                <MyButton text={'수정하기'} onClick={goEdit} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DiaryItem;","C:\\Users\\hyuk\\Desktop\\WorkSpace\\React\\diaryapp\\src\\components\\DiaryEditor.js",[],[],"C:\\Users\\hyuk\\Desktop\\WorkSpace\\React\\diaryapp\\src\\components\\EmotionItem.js",["83"],[],"const EmotionItem = ({\r\n    emotion_id, \r\n    emotion_img, \r\n    emotion_descript, \r\n    onClick,\r\n    isSelected,\r\n    }) => {\r\n    return (\r\n        <div \r\n            className={[\"EmotionItem\", \r\n                isSelected ? `EmotionItem_on_${emotion_id}` : `EmotionItem_off`].join(' ')}\r\n            onClick={() => onClick(emotion_id)}\r\n        >\r\n            <img src={emotion_img} />\r\n            <span>{emotion_descript}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmotionItem;","C:\\Users\\hyuk\\Desktop\\WorkSpace\\React\\diaryapp\\src\\util\\date.js",[],[],"C:\\Users\\hyuk\\Desktop\\WorkSpace\\React\\diaryapp\\src\\util\\emotion.js",[],[],{"ruleId":"84","severity":1,"message":"85","line":15,"column":5,"nodeType":"86","endLine":15,"endColumn":14,"suggestions":"87"},{"ruleId":"88","severity":1,"message":"89","line":49,"column":29,"nodeType":"90","endLine":49,"endColumn":68},{"ruleId":"84","severity":1,"message":"91","line":22,"column":8,"nodeType":"92","endLine":22,"endColumn":23,"suggestions":"93"},{"ruleId":"94","severity":1,"message":"95","line":2,"column":11,"nodeType":"86","messageId":"96","endLine":2,"endColumn":18},{"ruleId":"88","severity":1,"message":"89","line":22,"column":17,"nodeType":"90","endLine":22,"endColumn":86},{"ruleId":"88","severity":1,"message":"89","line":14,"column":13,"nodeType":"90","endLine":14,"endColumn":38},"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setData'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [diaryList, id, navigate] as a second argument to the useEffect Hook.","Identifier",["97"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["98"],"no-unused-vars","'btnType' is assigned a value but never used.","unusedVar",{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},"Add dependencies array: [diaryList, id, navigate]",{"range":"103","text":"104"},"Update the dependencies array to be: [id, diaryList, navigate]",{"range":"105","text":"106"},[899,899],", [diaryList, id, navigate]",[775,790],"[id, diaryList, navigate]"]