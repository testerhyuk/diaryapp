{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hyuk\\\\Desktop\\\\WorkSpace\\\\React\\\\diaryapp\\\\src\\\\components\\\\MyButton.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyButton = _ref => {\n  let {\n    text,\n    type,\n    onClick\n  } = _ref;\n  const btnType = ['positive', 'negative'].includes(type) ? type : 'default';\n  // 배열안에 값이 없다면 type을 default로 바꿔주는 코드\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: [\"MyButton\", `MyButton_${type}`].join(' '),\n    onClick: onClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n_c = MyButton;\nMyButton.defaultProps = {\n  type: \"default\"\n};\nexport default MyButton;\nvar _c;\n$RefreshReg$(_c, \"MyButton\");","map":{"version":3,"names":["MyButton","text","type","onClick","btnType","includes","join","defaultProps"],"sources":["C:/Users/hyuk/Desktop/WorkSpace/React/diaryapp/src/components/MyButton.js"],"sourcesContent":["const MyButton = ({text, type, onClick}) => {\r\n    const btnType = ['positive', 'negative'].includes(type)? type:'default';\r\n    // 배열안에 값이 없다면 type을 default로 바꿔주는 코드\r\n    return (\r\n        <button \r\n            className={[\"MyButton\", `MyButton_${type}`].join(' ')} \r\n            onClick={onClick}>\r\n            {text}\r\n        </button>\r\n    )\r\n};\r\n\r\nMyButton.defaultProps = {\r\n    type: \"default\",\r\n};\r\n\r\nexport default MyButton;"],"mappings":";;AAAA,MAAMA,QAAQ,GAAG,QAA2B;EAAA,IAA1B;IAACC,IAAI;IAAEC,IAAI;IAAEC;EAAO,CAAC;EACnC,MAAMC,OAAO,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,CAACC,QAAQ,CAACH,IAAI,CAAC,GAAEA,IAAI,GAAC,SAAS;EACvE;EACA,oBACI;IACI,SAAS,EAAE,CAAC,UAAU,EAAG,YAAWA,IAAK,EAAC,CAAC,CAACI,IAAI,CAAC,GAAG,CAAE;IACtD,OAAO,EAAEH,OAAQ;IAAA,UAChBF;EAAI;IAAA;IAAA;IAAA;EAAA,QACA;AAEjB,CAAC;AAAC,KAVID,QAAQ;AAYdA,QAAQ,CAACO,YAAY,GAAG;EACpBL,IAAI,EAAE;AACV,CAAC;AAED,eAAeF,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}