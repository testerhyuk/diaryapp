{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hyuk\\\\Desktop\\\\WorkSpace\\\\React\\\\diaryapp\\\\src\\\\components\\\\DiaryEditor.js\",\n  _s = $RefreshSig$();\nimport { useContext, useRef, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { DiaryDispatchContext } from \"../App\";\nimport EmotionItem from \"./EmotionItem\";\nimport MyButton from \"./MyButton\";\nimport MyHeader from \"./MyHeader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const getStringDate = date => {\n  let year = date.getFullYear();\n  let month = date.getMonth() + 1;\n  let day = date.getDate();\n  if (month < 10) {\n    month = `0${month}`;\n  }\n  if (day < 10) {\n    day = `0${day}`;\n  }\n  return `${year}-${month}-${day}`;\n};\nconst emotionList = [{\n  emotion_id: 1,\n  emotion_img: process.env.PUBLIC_URL + `/assets/emotion1.png`,\n  emotion_descript: '완전 좋음'\n}, {\n  emotion_id: 2,\n  emotion_img: process.env.PUBLIC_URL + `/assets/emotion2.png`,\n  emotion_descript: '좋음'\n}, {\n  emotion_id: 3,\n  emotion_img: process.env.PUBLIC_URL + `/assets/emotion3.png`,\n  emotion_descript: '그럭저럭'\n}, {\n  emotion_id: 4,\n  emotion_img: process.env.PUBLIC_URL + `/assets/emotion4.png`,\n  emotion_descript: '나쁨'\n}, {\n  emotion_id: 5,\n  emotion_img: process.env.PUBLIC_URL + `/assets/emotion5.png`,\n  emotion_descript: '끔찍함'\n}];\nconst DiaryEditor = () => {\n  _s();\n  const contentRef = useRef();\n  const [content, setContent] = useState(\"\");\n  const [emotion, setEmotion] = useState(3);\n  const [date, setDate] = useState(getStringDate(new Date()));\n  const navigate = useNavigate();\n  const {\n    onCreate\n  } = useContext(DiaryDispatchContext);\n  const handleClickEmote = emotion => {\n    setEmotion(emotion);\n  };\n  const handleSubmit = () => {\n    if (content.length < 1) {\n      contentRef.current.focus();\n      return;\n    }\n    onCreate(date, content, emotion);\n    navigate('/', {\n      replace: true\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DiaryEditor\",\n    children: [/*#__PURE__*/_jsxDEV(MyHeader, {\n      headText: '새 일기 쓰기',\n      leftChild: /*#__PURE__*/_jsxDEV(MyButton, {\n        text: '< 뒤로가기',\n        onClick: () => navigate(-1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uC624\\uB298\\uC740 \\uC5B8\\uC81C\\uC778\\uAC00\\uC694?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input_box\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input_date\",\n            value: date,\n            type: \"date\",\n            onChange: e => setDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uC624\\uB298\\uC758 \\uAC10\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input_box emotion_list_wrapper\",\n          children: emotionList.map(it => /*#__PURE__*/_jsxDEV(EmotionItem, {\n            ...it,\n            onClick: handleClickEmote,\n            isSelected: it.emotion_id === emotion\n          }, it.emotion_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uC624\\uB298\\uC758 \\uC77C\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input_box text_wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"\\uC624\\uB298\\uC740 \\uC5B4\\uB560\\uB098\\uC694?\",\n            ref: contentRef,\n            value: content,\n            onChange: e => setContent(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control_box\",\n          children: [/*#__PURE__*/_jsxDEV(MyButton, {\n            text: '취소하기',\n            onClick: () => navigate(-1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n            text: \"작성 완료\",\n            type: 'positive',\n            onClick: handleSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(DiaryEditor, \"Aw8oGqu4LmlRwtVRBVNnonJAw+c=\", false, function () {\n  return [useNavigate];\n});\n_c = DiaryEditor;\nexport default DiaryEditor;\nvar _c;\n$RefreshReg$(_c, \"DiaryEditor\");","map":{"version":3,"names":["useContext","useRef","useState","useNavigate","DiaryDispatchContext","EmotionItem","MyButton","MyHeader","getStringDate","date","year","getFullYear","month","getMonth","day","getDate","emotionList","emotion_id","emotion_img","process","env","PUBLIC_URL","emotion_descript","DiaryEditor","contentRef","content","setContent","emotion","setEmotion","setDate","Date","navigate","onCreate","handleClickEmote","handleSubmit","length","current","focus","replace","e","target","value","map","it"],"sources":["C:/Users/hyuk/Desktop/WorkSpace/React/diaryapp/src/components/DiaryEditor.js"],"sourcesContent":["import { useContext, useRef, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { DiaryDispatchContext } from \"../App\";\r\nimport EmotionItem from \"./EmotionItem\";\r\nimport MyButton from \"./MyButton\";\r\nimport MyHeader from \"./MyHeader\";\r\n\r\nexport const getStringDate = (date) => {\r\n    let year = date.getFullYear();\r\n    let month = date.getMonth() + 1;\r\n    let day = date.getDate();\r\n  \r\n    if (month < 10) {\r\n      month = `0${month}`;\r\n    }\r\n    if (day < 10) {\r\n      day = `0${day}`;\r\n    }\r\n  \r\n    return `${year}-${month}-${day}`;\r\n};\r\n\r\nconst emotionList = [\r\n    {\r\n        emotion_id: 1,\r\n        emotion_img: process.env.PUBLIC_URL + `/assets/emotion1.png`,\r\n        emotion_descript: '완전 좋음' \r\n    },\r\n    {\r\n        emotion_id: 2,\r\n        emotion_img: process.env.PUBLIC_URL + `/assets/emotion2.png`,\r\n        emotion_descript: '좋음' \r\n    },\r\n    {\r\n        emotion_id: 3,\r\n        emotion_img: process.env.PUBLIC_URL + `/assets/emotion3.png`,\r\n        emotion_descript: '그럭저럭' \r\n    },\r\n    {\r\n        emotion_id: 4,\r\n        emotion_img: process.env.PUBLIC_URL + `/assets/emotion4.png`,\r\n        emotion_descript: '나쁨' \r\n    },\r\n    {\r\n        emotion_id: 5,\r\n        emotion_img: process.env.PUBLIC_URL + `/assets/emotion5.png`,\r\n        emotion_descript: '끔찍함' \r\n    }\r\n]\r\n\r\nconst DiaryEditor = () => {\r\n    const contentRef = useRef();\r\n    const [content, setContent] = useState(\"\");\r\n    const [emotion, setEmotion] = useState(3);\r\n    const [date, setDate] = useState(getStringDate(new Date()));\r\n    const navigate = useNavigate();\r\n\r\n    const {onCreate} = useContext(DiaryDispatchContext);\r\n\r\n    const handleClickEmote = (emotion) => {\r\n        setEmotion(emotion);\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        if (content.length < 1){\r\n            contentRef.current.focus();\r\n            return;\r\n        }\r\n\r\n        onCreate(date, content, emotion);\r\n        navigate('/', {replace: true})\r\n    }\r\n\r\n    return (\r\n        <div className=\"DiaryEditor\">\r\n            <MyHeader\r\n                headText={'새 일기 쓰기'}\r\n                leftChild={<MyButton \r\n                    text={'< 뒤로가기'} \r\n                    onClick={()=>navigate(-1)}\r\n                />}\r\n            />\r\n            <div>\r\n                <section>\r\n                    <h4>오늘은 언제인가요?</h4>\r\n                    <div className=\"input_box\">\r\n                        <input\r\n                            className=\"input_date\"\r\n                            value={date}\r\n                            type='date'\r\n                            onChange={(e)=>setDate(e.target.value)}\r\n                        />\r\n                    </div>\r\n                </section>\r\n                <section>\r\n                    <h4>오늘의 감정</h4>\r\n                    <div className=\"input_box emotion_list_wrapper\">\r\n                        {emotionList.map((it) => (\r\n                            <EmotionItem \r\n                                key={it.emotion_id} \r\n                                {...it} \r\n                                onClick={handleClickEmote}\r\n                                isSelected={it.emotion_id === emotion}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </section>\r\n                <section>\r\n                    <h4>오늘의 일기</h4>\r\n                    <div className='input_box text_wrapper'>\r\n                        <textarea \r\n                            placeholder=\"오늘은 어땠나요?\"\r\n                            ref={contentRef} \r\n                            value={content} \r\n                            onChange={(e)=>setContent(e.target.value)}\r\n                        />\r\n                    </div>\r\n                </section>\r\n                <section>\r\n                    <div className=\"control_box\">\r\n                            <MyButton \r\n                                text={'취소하기'}\r\n                                onClick={() => navigate(-1)}\r\n                            />\r\n                            <MyButton \r\n                                text={\"작성 완료\"}\r\n                                type={'positive'}\r\n                                onClick={handleSubmit}\r\n                            />\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DiaryEditor;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}